#
# https://github.com/P3TERX/Actions-OpenWrt
#
# File: .github/workflows/openwrt-bulder.yml
# Description: Build OpenWrt using GitHub Actions
#
# Copyright (c) 2019-2024 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#

name: Build openclash

on:
  repository_dispatch:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/vernesong/OpenClash.git
  REPO_BRANCH: dev
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
        sudo docker image prune --all --force
        sudo -E apt-get -qq update
        #sudo -E apt-get -qq install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        #sudo -E apt-get -qq autoremove --purge
        #sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        
    - name: Get OpenWrt-SDK
      working-directory: /workdir
      run: |
        curl -SLk --connect-timeout 30 --retry 2 "https://archive.openwrt.org/chaos_calmer/15.05.1/ar71xx/generic/OpenWrt-SDK-15.05.1-ar71xx-generic_gcc-4.8-linaro_uClibc-0.9.33.2.Linux-x86_64.tar.bz2" -o "SDK.tar.bz2"
        tar xjf SDK.tar.bz2

    - name: Clone source code and build
      working-directory: /workdir
      run: |
        df -hT $PWD
        mv OpenWrt-SDK-15.05.1-* openwrtsdk
        cd openwrtsdk
        mkdir package/luci-app-openclash
        cd package/luci-app-openclash
        git init
        git remote add -f origin $REPO_URL
        git config core.sparsecheckout true
        echo "luci-app-openclash" >> .git/info/sparse-checkout
        git fetch --depth 1 origin $REPO_BRANCH
        git checkout -b $REPO_BRANCH origin/$REPO_BRANCH
        #git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrtsdk $GITHUB_WORKSPACE/openwrtsdk
        # 编译 po2lmo (如果有po2lmo可跳过)
        pushd luci-app-openclash/tools/po2lmo
        make && sudo make install
        popd
        cd ../..
        make package/luci-app-openclash/luci-app-openclash/compile V=99
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
    - name: Create tag
      id: tag
      run: |
        echo "::set-output name=release_tag::$(date +"%Y.%m.%d-%H%M")"
        echo "::set-output name=status::success"
        ls -l ${{ env.FIRMWARE }}/bin/ar71xx/packages/base

    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        files: ${{ env.FIRMWARE }}/bin/ar71xx/packages/base/luci-app-openclash*
